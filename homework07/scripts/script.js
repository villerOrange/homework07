// Напишите функцию, которая принимает два числовых аргумента и возвращает наименьшее из них.
function task1(a, b) {
    return Math.min(a, b)
}

// Напишите функцию, которая принимает два числовых аргумента и выводит в консоль все четные числа от большего к меньшему.
function task2(a, b) {

    for (let i = Math.max(a, b); i >= Math.min(a, b); i--) {
        if (i % 2 === 0) {
            console.log(i);
        }
    }
}

// Напишите функцию power, которая принимает два числовых аргумента (основание степени и саму степень) и возвращает число в указанной степени. Значение степени должно быть указано по умолчанию 2.
function power(a, b = 2) {
    return Math.pow(a, b)
}

// Напишите функцию, которая принимает числовой аргумент n и считает сумму чисел от 1 до n.
function task4(n) {
    let sum = 0
    let p = n

    for (let i = 0; i <= n; i++) {
        sum += p
        p -= 1
    }
    return sum
}

// Напишите функцию, которая принимает два числовых аргумента n и m и считает сумму четных чисел и нечетных чисел от n до m. Суммы выведите в консоль (в начале сумму четных чисел, а затем сумму нечетных).

function task5(a, b) {
    let even = 0;
    let odd = 0;

    for (let i = Math.min(a, b); i <= Math.max(a, b); i++) {
        if (i % 2 === 0) {
            even += i; 
        } else {
            odd += i; 
        }
    }

    console.log('Сумма четных чисел:', even);
    console.log('Сумма нечетных чисел:', odd);
}

// Напишите функцию, которая принимает в качестве аргументов массив строк, а возвращает первый самый длинный элемент массива. Если входной массив пуст, функция возвращает null. Если есть несколько одинаковых по длине элементов - функция возвращает первый из этих элементов. Пример: [ 'one', 'two', 'three' ] => 'three'

function task6(strings) {
    if (strings.length === 0) {
        return null;
    }

    let longest = strings[0]; 
    for (let i = 1; i < strings.length; i++) {
        if (strings[i].length > longest.length) {
            longest = strings[i];
        }
    }

    return longest;
}
